{"version":3,"sources":["hooks/useAnimationSection.js","pages/Home.js","pages/Conversion.js","pages/Dose.js","pages/Concentration.js","App.js","serviceWorker.js","index.js"],"names":["useAnimationSection","nameClass","useEffect","element","document","querySelector","classList","add","remove","Home","className","to","href","rel","target","Date","getFullYear","Conversion","Dose","Concentration","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","basename","process","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.423799bc.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useAnimationSection = (nameClass) => {\r\n  useEffect(() => {\r\n    const element = document.querySelector(`.${nameClass}`);\r\n    if (element) {\r\n      element.classList.add(`${nameClass}--active`);\r\n    }\r\n\r\n    return () => {\r\n      element.classList.remove(`${nameClass}--active`);\r\n    };\r\n  }, [nameClass]);\r\n};\r\n\r\nexport default useAnimationSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useAnimationSection from \"../hooks/useAnimationSection\";\r\n\r\nfunction Home() {\r\n  useAnimationSection(\"home\");\r\n  return (\r\n    <section className=\"home\">\r\n      <header className=\"header\">\r\n        <h1 className=\"section__title\">Kalkulator stężeń</h1>\r\n      </header>\r\n      <section className=\"home__list\">\r\n        <Link to=\"/conversion\" className=\"home__link\">\r\n          <i className=\"fas fa-calculator\"></i>\r\n          <section className=\"home__content\">\r\n            <h3 className=\"home__subtitle\">Konwersja</h3>\r\n            <p className=\"home__text\">\r\n              Zamień jednostki masy, objętości oraz stężenia molowego\r\n              i&nbsp;procentowego.\r\n            </p>\r\n          </section>\r\n        </Link>\r\n        <Link to=\"/concentration\" className=\"home__link\">\r\n          <i className=\"fas fa-percentage\"></i>\r\n          <section className=\"home__content\">\r\n            <h3 className=\"home__subtitle\">Stężenie</h3>\r\n            <p className=\"home__text\">\r\n              Oblicz jaką ilość substancji i&nbsp;rozpuszczalnika należy\r\n              połączyć aby otrzymać roztwór o&nbsp;określonym stężeniu.\r\n            </p>\r\n          </section>\r\n        </Link>\r\n        <Link to=\"/dose\" className=\"home__link\">\r\n          <i className=\"fas fa-vial\"></i>\r\n          <section className=\"home__content\">\r\n            <h3 className=\"home__subtitle\">Dawki leku</h3>\r\n            <p className=\"home__text\">\r\n              Oblicz jaką ilość leku i&nbsp;rozpuszczalnika należy połączyć aby\r\n              otrzymać dawkę odpowiednią dla określonego celu.\r\n            </p>\r\n          </section>\r\n        </Link>\r\n      </section>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__text\">\r\n          Created by{\" \"}\r\n          <a\r\n            href=\"https://martazaorska.github.io/portfolio/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            Marta Zaorska\r\n          </a>\r\n        </p>\r\n        <p className=\"footer__text\">\r\n          &copy; Concentration Calculator App {new Date().getFullYear()}\r\n        </p>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Conversion() {\r\n  return <div>Conversion</div>;\r\n}\r\n\r\nexport default Conversion;\r\n","import React from \"react\";\r\n\r\nfunction Dose() {\r\n  return <div>Dose</div>;\r\n}\r\n\r\nexport default Dose;\r\n","import React from \"react\";\r\n\r\nfunction Concentration() {\r\n  return <div>Concentration</div>;\r\n}\r\n\r\nexport default Concentration;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Conversion from \"./pages/Conversion\";\nimport Dose from \"./pages/Dose\";\nimport Concentration from \"./pages/Concentration\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/conversion\" component={Conversion} />\n        <Route exact path=\"/dose\" component={Dose} />\n        <Route exact path=\"/concentration\" component={Concentration} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}