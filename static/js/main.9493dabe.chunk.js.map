{"version":3,"sources":["hooks/useAnimationSection.js","pages/Home.js","constants.js","helper.js","hooks/useConversion.js","components/Conversion/SelectList.js","components/Conversion/ConversionContent.js","components/Conversion/MassConversion.js","components/Conversion/VolumeConversion.js","components/RadioButton.js","components/ControlItem.js","components/ResultItem.js","components/Conversion/ConcentrationConversion.js","components/HeaderPage.js","pages/Conversion.js","pages/Dose.js","components/Concentration/MolarConcentration.js","components/Concentration/PercentageConcentration.js","pages/Concentration.js","App.js","serviceWorker.js","index.js"],"names":["useAnimationSection","nameClass","useEffect","element","document","querySelector","classList","add","remove","Home","className","to","href","rel","target","Date","getFullYear","MASS_UNITS","gram","abbr","value","miligram","kilogram","VOLUME_UNITS","litr","mililitr","hektolitr","metr_szescienny","sup","decymetr_szescienny","centymetr_szescienny","milimetr_szescienny","prepareNumber","tmp","replace","checkNumber","test","amountToFixed","tab","split","length","parseFloat","toFixed","useConversion","unitList","useState","amountOne","setAmountOne","Object","keys","unitOne","setUnitOne","amountTwo","setAmountTwo","unitTwo","setUnitTwo","valueTwo","e","React","memo","data","setValue","onChange","entries","map","item","key","type","placeholder","disabled","MassConversion","VolumeConversion","label","options","classNames","radio__button","onClick","name","unitValue","setUnitValue","undefined","unitItem","index","result","unit","OPTIONS","ConcentrationConversion","setUnit","concentration","setConcentration","molarMass","setMolarMass","density","setDensity","disabledButton","setDisabledButton","setResult","error","setError","correctData","useMemo","section__box","concentration_conversion","conc","percentageToMolar","updatedDensity","concentrationConversion","isFinite","HeaderPage","title","Conversion","Dose","MolarConcentration","physicalState","setPhysicalState","setConc","concUnit","setConcUnit","amount","setAmount","concPercentage","setConcPercentage","molarConcentration","PercentageConcentration","concStart","setConcStart","concFinish","setConcFinish","percentageConcentration","Concentration","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","basename","process","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9493dabe.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useAnimationSection = (nameClass) => {\r\n  useEffect(() => {\r\n    const element = document.querySelector(`.${nameClass}`);\r\n    if (element) {\r\n      element.classList.add(`${nameClass}--active`);\r\n    }\r\n\r\n    return () => {\r\n      element.classList.remove(`${nameClass}--active`);\r\n    };\r\n  }, [nameClass]);\r\n};\r\n\r\nexport default useAnimationSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useAnimationSection from \"../hooks/useAnimationSection\";\r\n\r\nfunction Home() {\r\n  useAnimationSection(\"home\");\r\n  return (\r\n    <section className=\"home\">\r\n      <header className=\"header\">\r\n        <h1 className=\"section__title\">Kalkulator stężeń</h1>\r\n      </header>\r\n      <section className=\"home__list\">\r\n        <Link to=\"/conversion\" className=\"home__link\">\r\n          <i className=\"fas fa-calculator\"></i>\r\n          <section className=\"home__content\">\r\n            <h3 className=\"home__subtitle\">Konwersja</h3>\r\n            <p className=\"home__text\">\r\n              Zamień jednostki masy, objętości oraz stężenia molowego\r\n              i&nbsp;procentowego.\r\n            </p>\r\n          </section>\r\n        </Link>\r\n        <Link to=\"/concentration\" className=\"home__link\">\r\n          <i className=\"fas fa-percentage\"></i>\r\n          <section className=\"home__content\">\r\n            <h3 className=\"home__subtitle\">Stężenie</h3>\r\n            <p className=\"home__text\">\r\n              Oblicz jaką ilość substancji i&nbsp;rozpuszczalnika należy\r\n              połączyć aby otrzymać roztwór o&nbsp;określonym stężeniu.\r\n            </p>\r\n          </section>\r\n        </Link>\r\n        <Link to=\"/dose\" className=\"home__link\">\r\n          <i className=\"fas fa-vial\"></i>\r\n          <section className=\"home__content\">\r\n            <h3 className=\"home__subtitle\">Dawki leku</h3>\r\n            <p className=\"home__text\">\r\n              Oblicz jaką ilość leku i&nbsp;rozpuszczalnika należy połączyć aby\r\n              otrzymać dawkę odpowiednią dla określonego celu.\r\n            </p>\r\n          </section>\r\n        </Link>\r\n      </section>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__text\">\r\n          Created by{\" \"}\r\n          <a\r\n            href=\"https://martazaorska.github.io/portfolio/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            Marta Zaorska\r\n          </a>\r\n        </p>\r\n        <p className=\"footer__text\">\r\n          &copy; Concentration Calculator App {new Date().getFullYear()}\r\n        </p>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export const MASS_UNITS = {\r\n  gram: {\r\n    abbr: \"g\",\r\n    value: 1,\r\n  },\r\n  miligram: {\r\n    abbr: \"mg\",\r\n    value: 0.001,\r\n  },\r\n  kilogram: {\r\n    abbr: \"kg\",\r\n    value: 1000,\r\n  },\r\n};\r\n\r\nexport const VOLUME_UNITS = {\r\n  litr: {\r\n    abbr: \"l\",\r\n    value: 1,\r\n  },\r\n  mililitr: {\r\n    abbr: \"ml\",\r\n    value: 0.001,\r\n  },\r\n  hektolitr: {\r\n    abbr: \"hl\",\r\n    value: 100,\r\n  },\r\n  metr_szescienny: {\r\n    abbr: \"m\",\r\n    value: 1000,\r\n    sup: true,\r\n  },\r\n  decymetr_szescienny: {\r\n    abbr: \"dm\",\r\n    value: 1,\r\n    sup: true,\r\n  },\r\n  centymetr_szescienny: {\r\n    abbr: \"cm\",\r\n    value: 0.001,\r\n    sup: true,\r\n  },\r\n  milimetr_szescienny: {\r\n    abbr: \"mm\",\r\n    value: 0.000001,\r\n    sup: true,\r\n  },\r\n};\r\n","export const prepareNumber = (value) => {\r\n  const tmp = value.replace(\",\", \".\");\r\n  return checkNumber(tmp) ? tmp : \"\";\r\n};\r\n\r\nexport const checkNumber = (value) => {\r\n  return /^\\d*\\.?\\d*$/.test(value);\r\n};\r\n\r\nexport const amountToFixed = (value) => {\r\n  const tab = `${value}`.split(\".\");\r\n  return tab.length <= 1\r\n    ? value\r\n    : tab[1].length > 4\r\n    ? parseFloat(value.toFixed(4))\r\n    : value;\r\n};\r\n\r\nexport const concentrationConversion = (\r\n  conc,\r\n  density,\r\n  molarMass,\r\n  percentageToMolar = false\r\n) => {\r\n  const updatedDensity = density * 1000;\r\n  return percentageToMolar\r\n    ? (conc * updatedDensity) / (100 * molarMass)\r\n    : (conc * 100 * molarMass) / updatedDensity;\r\n};\r\n\r\nexport const percentageConcentration = (concStart, concFinish, amount) => {\r\n  return ((concFinish * amount) / 100) * (100 / concStart);\r\n};\r\n\r\nexport const molarConcentration = (\r\n  conc,\r\n  concUnit,\r\n  amount,\r\n  molarMass,\r\n  physicalState,\r\n  concPercentage,\r\n  density\r\n) => {\r\n  let value = amount * 0.001 * conc * molarMass;\r\n  if (physicalState === \"liquid\") {\r\n    value =\r\n      concUnit === \"mM\"\r\n        ? (((value * 100) / concPercentage) * 0.001) / density\r\n        : (value * 100) / concPercentage / density;\r\n  } else {\r\n    value = concUnit === \"mM\" ? value : value * 1000;\r\n  }\r\n  return value;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { prepareNumber, amountToFixed } from \"../helper\";\r\n\r\nconst useConversion = (unitList) => {\r\n  const [amountOne, setAmountOne] = useState(\"1\");\r\n  const [unitOne, setUnitOne] = useState(Object.keys(unitList)[0]);\r\n  const [amountTwo, setAmountTwo] = useState(\"1000\");\r\n  const [unitTwo, setUnitTwo] = useState(Object.keys(unitList)[1]);\r\n\r\n  useEffect(() => {\r\n    const valueOne = parseFloat(amountOne) || 0;\r\n    let valueTwo =\r\n      (valueOne * unitList[unitOne].value) / unitList[unitTwo].value;\r\n    setAmountTwo(`${amountToFixed(valueTwo)}`);\r\n  }, [amountOne, unitOne, unitTwo, unitList]);\r\n\r\n  const changeAmount = (e) => setAmountOne(prepareNumber(e.target.value));\r\n\r\n  return [\r\n    amountOne,\r\n    changeAmount,\r\n    unitOne,\r\n    setUnitOne,\r\n    unitTwo,\r\n    setUnitTwo,\r\n    amountTwo,\r\n  ];\r\n};\r\n\r\nexport default useConversion;\r\n","import React from \"react\";\r\n\r\nfunction SelectList({ data, value, setValue }) {\r\n  return (\r\n    <select value={value} onChange={(e) => setValue(e.target.value)}>\r\n      {Object.entries(data).map((item) => (\r\n        <option value={item[0]} key={item[0]}>\r\n          {item[1].abbr}\r\n          {item[1].sup ? 3 : null}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default React.memo(SelectList);\r\n","import React from \"react\";\r\n\r\nimport useConversion from \"../../hooks/useConversion\";\r\nimport SelectList from \"./SelectList\";\r\n\r\nfunction ConversionContent({ unitList }) {\r\n  const [\r\n    amountOne,\r\n    setAmountOne,\r\n    unitOne,\r\n    setUnitOne,\r\n    unitTwo,\r\n    setUnitTwo,\r\n    amountTwo,\r\n  ] = useConversion(unitList);\r\n\r\n  return (\r\n    <section className=\"section__content\">\r\n      <div className=\"section__control\">\r\n        <input\r\n          type=\"text\"\r\n          value={amountOne}\r\n          onChange={setAmountOne}\r\n          placeholder=\"0.0\"\r\n        />\r\n        <SelectList data={unitList} value={unitOne} setValue={setUnitOne} />\r\n      </div>\r\n      <div className=\"conversion__icon\">\r\n        <i className=\"fas fa-sync-alt\"></i>\r\n      </div>\r\n      <div className=\"section__control\">\r\n        <input\r\n          type=\"text\"\r\n          value={amountTwo}\r\n          disabled\r\n          className=\"input--disabled\"\r\n        />\r\n        <SelectList data={unitList} value={unitTwo} setValue={setUnitTwo} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default React.memo(ConversionContent);\r\n","import React from \"react\";\r\n\r\nimport { MASS_UNITS } from \"../../constants\";\r\nimport ConversionContent from \"./ConversionContent\";\r\n\r\nfunction MassConversion() {\r\n  return (\r\n    <section className=\"section__box mass_conversion\">\r\n      <h4 className=\"section__subtitle\">Jednostki masy</h4>\r\n      <ConversionContent unitList={MASS_UNITS} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MassConversion;\r\n","import React from \"react\";\r\n\r\nimport { VOLUME_UNITS } from \"../../constants\";\r\nimport ConversionContent from \"./ConversionContent\";\r\n\r\nfunction VolumeConversion() {\r\n  return (\r\n    <section className=\"section__box volume_conversion\">\r\n      <h4 className=\"section__subtitle\">Jednostki objętości</h4>\r\n      <ConversionContent unitList={VOLUME_UNITS} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default VolumeConversion;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction RadioButton({ label = \"\", value, setValue, options }) {\r\n  const clickHandler = () => {\r\n    value === options[0].value\r\n      ? setValue(options[1].value)\r\n      : setValue(options[0].value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"section__control\">\r\n      {label === \"\" ? null : <label>{label}</label>}\r\n      <button\r\n        className={classNames({\r\n          radio__button: true,\r\n          \"radio__button--right\": value === options[1].value,\r\n        })}\r\n        onClick={clickHandler}\r\n      >\r\n        <span className=\"label\">{options[0].name}</span>\r\n        <span className=\"spin\">\r\n          <span className=\"stripe\"></span>\r\n          <span className=\"dot\"></span>\r\n        </span>\r\n        <span className=\"label\">{options[1].name}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(RadioButton);\r\n","import React from \"react\";\r\nimport { prepareNumber } from \"../helper\";\r\n\r\nfunction ControlItem({\r\n  label,\r\n  value,\r\n  setValue,\r\n  unitValue,\r\n  setUnitValue = undefined,\r\n  unitList = [],\r\n  sup = false,\r\n}) {\r\n  return (\r\n    <div className=\"section__control\">\r\n      {label === \"\" ? null : <label>{label}</label>}\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => setValue(prepareNumber(e.target.value))}\r\n        placeholder=\"0.0\"\r\n      />\r\n      {setUnitValue ? (\r\n        <select\r\n          value={unitValue}\r\n          onChange={(e) => setUnitValue(e.target.value)}\r\n        >\r\n          {unitList.map((unitItem, index) => (\r\n            <option value={unitItem} key={`${unitItem}_${index}`}>\r\n              {unitItem}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      ) : unitValue !== \"\" ? (\r\n        <span className=\"unit\">\r\n          [{unitValue}\r\n          {sup ? <sup>3</sup> : null}]\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ControlItem);\r\n","import React from \"react\";\r\n\r\nfunction ResultItem({ name, result, unit, sup = false }) {\r\n  return (\r\n    <p className=\"section__text\">\r\n      <span className=\"name\">{name}</span>\r\n      <span className=\"result\"> {result} </span>\r\n      <span className=\"unit\">\r\n        [{unit}\r\n        {sup ? <sup>3</sup> : null}]\r\n      </span>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default React.memo(ResultItem);\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport RadioButton from \"../RadioButton\";\r\nimport ControlItem from \"../ControlItem\";\r\nimport ResultItem from \"../ResultItem\";\r\n\r\nimport { amountToFixed, concentrationConversion } from \"../../helper\";\r\n\r\nconst OPTIONS = [\r\n  { value: \"mol/dm3\", name: \"molowe\" },\r\n  { value: \"%\", name: \"procentowe\" },\r\n];\r\n\r\nfunction ConcentrationConversion() {\r\n  const [unit, setUnit] = useState(\"%\");\r\n  const [concentration, setConcentration] = useState(\"\");\r\n  const [molarMass, setMolarMass] = useState(\"\");\r\n  const [density, setDensity] = useState(\"\");\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [result, setResult] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const correctData = useMemo(() => {\r\n    return concentration !== \"\" && molarMass !== \"\" && density !== \"\"\r\n      ? true\r\n      : false;\r\n  }, [concentration, molarMass, density]);\r\n\r\n  useEffect(() => {\r\n    setResult(\"\");\r\n    setError(\"\");\r\n    correctData ? setDisabledButton(false) : setDisabledButton(true);\r\n  }, [unit, correctData]);\r\n\r\n  const conversionHandler = () => {\r\n    const value = concentrationConversion(\r\n      concentration,\r\n      density,\r\n      molarMass,\r\n      unit === \"%\"\r\n    );\r\n\r\n    isFinite(value)\r\n      ? setResult(`${amountToFixed(value)}`)\r\n      : setError(\"Niepoprawne dane\");\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className={classNames({\r\n        section__box: true,\r\n        concentration_conversion: true,\r\n        \"concentration_conversion--molar\": unit === \"mol/dm3\",\r\n      })}\r\n    >\r\n      <section className=\"section__content\">\r\n        <h4 className=\"section__subtitle\">Stężenie</h4>\r\n        <RadioButton value={unit} setValue={setUnit} options={OPTIONS} />\r\n        <ControlItem\r\n          label=\"\"\r\n          value={concentration}\r\n          setValue={setConcentration}\r\n          unitValue={unit}\r\n        />\r\n        <ControlItem\r\n          label=\"Masa molowa\"\r\n          value={molarMass}\r\n          setValue={setMolarMass}\r\n          unitValue=\"g/mol\"\r\n        />\r\n        <ControlItem\r\n          label=\"Gęstość\"\r\n          value={density}\r\n          setValue={setDensity}\r\n          sup={true}\r\n          unitValue=\"g/cm\"\r\n        />\r\n        <div className=\"section__button\">\r\n          <button onClick={conversionHandler} disabled={disabledButton}>\r\n            <i className=\"fas fa-check\"></i>\r\n          </button>\r\n        </div>\r\n      </section>\r\n      {result.length !== 0 ? (\r\n        <section className=\"section__result\">\r\n          {unit === \"%\" ? (\r\n            <ResultItem\r\n              name=\"Stężenie molowe\"\r\n              result={result}\r\n              unit=\"mol/dm\"\r\n              sup={true}\r\n            />\r\n          ) : (\r\n            <ResultItem name=\"Stężenie procentowe\" result={result} unit=\"%\" />\r\n          )}\r\n        </section>\r\n      ) : null}\r\n      {error.length !== 0 ? <p className=\"section__error\">{error}</p> : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ConcentrationConversion;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HeaderPage({ title }) {\r\n  return (\r\n    <h2 className=\"section__title\">\r\n      <Link to=\"/\">{title}</Link>\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default HeaderPage;\r\n","import React from \"react\";\r\nimport useAnimationSection from \"../hooks/useAnimationSection\";\r\n\r\nimport {\r\n  MassConversion,\r\n  VolumeConversion,\r\n  ConcentrationConversion,\r\n} from \"../components/Conversion/index\";\r\n\r\nimport HeaderPage from \"../components/HeaderPage\";\r\n\r\nfunction Conversion() {\r\n  useAnimationSection(\"conversion\");\r\n  return (\r\n    <section className=\"conversion\">\r\n      <HeaderPage title=\"Konwersja\" />\r\n      <section className=\"section__wrapper\">\r\n        <MassConversion />\r\n        <VolumeConversion />\r\n        <ConcentrationConversion />\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Conversion;\r\n","import React from \"react\";\r\n\r\nfunction Dose() {\r\n  return <div>Dose</div>;\r\n}\r\n\r\nexport default Dose;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nimport RadioButton from \"../RadioButton\";\r\nimport ControlItem from \"../ControlItem\";\r\nimport ResultItem from \"../ResultItem\";\r\n\r\nimport { amountToFixed, molarConcentration } from \"../../helper\";\r\n\r\nconst OPTIONS = [\r\n  { name: \"ciało stałe\", value: \"solid\" },\r\n  { name: \"ciecz\", value: \"liquid\" },\r\n];\r\n\r\nfunction MolarConcentration() {\r\n  const [physicalState, setPhysicalState] = useState(\"solid\");\r\n  const [conc, setConc] = useState(\"\");\r\n  const [concUnit, setConcUnit] = useState(\"mM\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [molarMass, setMolarMass] = useState(\"\");\r\n  const [concPercentage, setConcPercentage] = useState(\"\");\r\n  const [density, setDensity] = useState(\"\");\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [result, setResult] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const correctData = useMemo(() => {\r\n    if (physicalState === \"liquid\" && (concPercentage === \"\" || density === \"\"))\r\n      return false;\r\n    return conc !== \"\" && amount !== \"\" && molarMass !== \"\" ? true : false;\r\n  }, [conc, amount, molarMass, concPercentage, density, physicalState]);\r\n\r\n  useEffect(() => {\r\n    setResult(\"\");\r\n    setError(\"\");\r\n    correctData ? setDisabledButton(false) : setDisabledButton(true);\r\n  }, [correctData]);\r\n\r\n  const concentrationHandler = () => {\r\n    const value = molarConcentration(\r\n      conc,\r\n      concUnit,\r\n      amount,\r\n      molarMass,\r\n      physicalState,\r\n      concPercentage,\r\n      density\r\n    );\r\n    isFinite(value)\r\n      ? setResult(`${amountToFixed(value)}`)\r\n      : setError(\"Niepoprawne dane\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"section__box molar_concentration\">\r\n      <section className=\"section__content\">\r\n        <h4 className=\"section__subtitle\">Molowe</h4>\r\n        <RadioButton\r\n          value={physicalState}\r\n          setValue={setPhysicalState}\r\n          options={OPTIONS}\r\n        />\r\n        <ControlItem\r\n          label=\"Masa molowa roztworu\"\r\n          value={molarMass}\r\n          setValue={setMolarMass}\r\n          unitValue=\"g/mol\"\r\n        />\r\n        {physicalState === \"liquid\" ? (\r\n          <>\r\n            <ControlItem\r\n              label=\"Stężenie procentowe roztworu\"\r\n              value={concPercentage}\r\n              setValue={setConcPercentage}\r\n              unitValue=\"%\"\r\n            />\r\n            <ControlItem\r\n              label=\"Gęstość roztworu\"\r\n              value={density}\r\n              setValue={setDensity}\r\n              unitValue=\"g/cm\"\r\n              sup={true}\r\n            />\r\n          </>\r\n        ) : null}\r\n        <ControlItem\r\n          label=\"Ilość jaką chcemy otrzymać\"\r\n          value={amount}\r\n          setValue={setAmount}\r\n          unitValue=\"ml\"\r\n        />\r\n        <ControlItem\r\n          label=\"Stężenie molowe jakie chcemy otrzymać\"\r\n          value={conc}\r\n          setValue={setConc}\r\n          unitValue={concUnit}\r\n          setUnitValue={setConcUnit}\r\n          unitList={[\"mM\", \"M\"]}\r\n        />\r\n        <div className=\"section__button\">\r\n          <button onClick={concentrationHandler} disabled={disabledButton}>\r\n            <i className=\"fas fa-check\"></i>\r\n          </button>\r\n        </div>\r\n      </section>\r\n      {result.length !== 0 ? (\r\n        <section className=\"section__result\">\r\n          {physicalState === \"solid\" ? (\r\n            <ResultItem unit=\"mg\" name=\"Ilość substancji\" result={result} />\r\n          ) : (\r\n            <ResultItem unit=\"ml\" name=\"Ilość substancji\" result={result} />\r\n          )}\r\n          <ResultItem\r\n            result={\r\n              physicalState === \"solid\"\r\n                ? amount\r\n                : `${amountToFixed(parseFloat(amount) - parseFloat(result))}`\r\n            }\r\n            name=\"Ilość rozpuszczalnika\"\r\n            unit=\"ml\"\r\n          />\r\n        </section>\r\n      ) : null}\r\n      {error.length !== 0 ? <p className=\"section__error\">{error}</p> : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MolarConcentration;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { amountToFixed, percentageConcentration } from \"../../helper\";\r\n\r\nimport ControlItem from \"../ControlItem\";\r\nimport ResultItem from \"../ResultItem\";\r\n\r\nfunction PercentageConcentration() {\r\n  const [concStart, setConcStart] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [concFinish, setConcFinish] = useState(\"\");\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [result, setResult] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const correctData = useMemo(() => {\r\n    return amount !== \"\" && concStart !== \"\" && concFinish !== \"\"\r\n      ? true\r\n      : false;\r\n  }, [amount, concStart, concFinish]);\r\n\r\n  useEffect(() => {\r\n    setResult(\"\");\r\n    setError(\"\");\r\n    correctData ? setDisabledButton(false) : setDisabledButton(true);\r\n  }, [correctData]);\r\n\r\n  const concentrationHandler = () => {\r\n    const value = percentageConcentration(concStart, concFinish, amount);\r\n    isFinite(value)\r\n      ? setResult(`${amountToFixed(value)}`)\r\n      : setError(\"Niepoprawne dane\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"section__box percentage_concentration\">\r\n      <section className=\"section__content\">\r\n        <h4 className=\"section__subtitle\">Procentowe</h4>\r\n        <ControlItem\r\n          label=\"Stężenie początkowe\"\r\n          value={concStart}\r\n          setValue={setConcStart}\r\n          unitValue=\"%\"\r\n        />\r\n        <ControlItem\r\n          label=\"Ilość roztworu jaką chcemy otrzymać\"\r\n          value={amount}\r\n          setValue={setAmount}\r\n          unitValue=\"ml\"\r\n        />\r\n        <ControlItem\r\n          label=\"Stężenie jakie chcemy otrzymać\"\r\n          unitValue=\"%\"\r\n          value={concFinish}\r\n          setValue={setConcFinish}\r\n        />\r\n        <div className=\"section__button\">\r\n          <button onClick={concentrationHandler} disabled={disabledButton}>\r\n            <i className=\"fas fa-check\"></i>\r\n          </button>\r\n        </div>\r\n      </section>\r\n      {result.length !== 0 ? (\r\n        <section className=\"section__result\">\r\n          <ResultItem name=\"Ilość substancji\" result={result} unit=\"ml\" />\r\n          <ResultItem\r\n            name=\"Ilość rozpuszczalnika\"\r\n            result={`${amountToFixed(parseFloat(amount) - parseFloat(result))}`}\r\n            unit=\"ml\"\r\n          />\r\n        </section>\r\n      ) : null}\r\n      {error.length !== 0 ? <p className=\"section__error\">{error}</p> : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PercentageConcentration;\r\n","import React from \"react\";\r\nimport useAnimationSection from \"../hooks/useAnimationSection\";\r\n\r\nimport {\r\n  PercentageConcentration,\r\n  MolarConcentration,\r\n} from \"../components/Concentration/index\";\r\n\r\nimport HeaderPage from \"../components/HeaderPage\";\r\n\r\nfunction Concentration() {\r\n  useAnimationSection(\"concentration\");\r\n  return (\r\n    <section className=\"concentration\">\r\n      <HeaderPage title=\"Stężenie\" />\r\n      <section className=\"section__wrapper\">\r\n        <PercentageConcentration />\r\n        <MolarConcentration />\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Concentration;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Conversion from \"./pages/Conversion\";\nimport Dose from \"./pages/Dose\";\nimport Concentration from \"./pages/Concentration\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/conversion\" component={Conversion} />\n        <Route exact path=\"/dose\" component={Dose} />\n        <Route exact path=\"/concentration\" component={Concentration} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}